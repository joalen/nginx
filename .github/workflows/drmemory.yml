name: Run Dr. Memory

on:
  push:

jobs:
  run-drmemory:
    name: '${{ matrix.os }}'
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04]

    steps:
      - name: Check out repository
        uses: actions/checkout@v4 
        with:
          ref: e734df6664e70f118ca3140bcef6d4f1750fa8fa

      - name: Install dependencies for project (Linux)
        if: runner.os == 'Linux'
        run: | 
          sudo apt-get update
          sudo apt-get install -y build-essential libpcre3 libpcre3-dev zlib1g zlib1g-dev libssl-dev libgd-dev libxml2 libxml2-dev uuid-dev 
          
      - name: Build repository 
        run: | 
          wget  http://nginx.org/download/nginx-1.20.0.tar.gz && tar -zxvf nginx-1.20.0.tar.gz && cd nginx-1.20.0
          export CC=gcc && export CXX=g++ && export CFLAGS="-g -fno-inline -fno-omit-frame-pointer" && export LDFLAGS=""
          ./configure --prefix=/var/www/html --sbin-path=/usr/sbin/nginx --conf-path=/etc/nginx/nginx.conf --http-log-path=/var/log/nginx/access.log --error-log-path=/var/log/nginx/error.log --with-pcre  --lock-path=/var/lock/nginx.lock --pid-path=/var/run/nginx.pid --with-http_ssl_module --with-http_image_filter_module=dynamic --modules-path=/etc/nginx/modules --with-http_v2_module --with-stream=dynamic --with-http_addition_module --with-http_mp4_module
          ./configure --without-http_empty_gif_module
          sed -i 's/^CC\s*=.*/CC = gcc/' Makefile && sed -i 's/^CXX\s*=.*/CXX = g++/' Makefile && sed -i 's/^CFLAGS\s*=.*/& -g -fno-inline -fno-omit-frame-pointer/' Makefile && sed -i 's/^LDFLAGS\s*=.*/& /' Makefile && sed -i 's/^CPP\s*=.*/CPP = gcc -E/' Makefile
          make
        continue-on-error: true 

      - name: Install Dr. Memory
        if: runner.os == 'Linux'
        run: | 
          sudo apt-get update
          sudo apt-get install -y libunwind8
          wget -P /tmp/ https://github.com/DynamoRIO/drmemory/releases/download/release_2.6.0/DrMemory-Linux-2.6.0.tar.gz && tar -xzf /tmp/DrMemory-Linux-2.6.0.tar.gz -C /tmp/ && echo "/tmp/DrMemory-Linux-2.6.0/bin" >> $GITHUB_PATH
           
      - name: Generate Logs folder
        run: mkdir logs

      - name: Run Dr. Memory
        run: |
          #!/bin/bash
          set +e 

          echo "=========[Dr Memory Service Started!]========="

          DIRECTORY=.

          is_executable() {
            local file="$1"
            if file "$file" | grep -q 'ELF 64-bit'; then
              return 0
            else
              return 1
            fi
          }

          run_with_drmemory() {
            local executable="$1"
            local log_dir="./logs"
            timeout 30s drmemory -logdir "./logs" -- "$executable"
            local exit_status=$?
          }

          find "$DIRECTORY" -type f -executable | while read -r file; do
            if is_executable "$file"; then
              run_with_drmemory "$file"
              echo ""
              echo ""
              echo ""
            fi
          done

          echo "=========[Dr. Memory service finished]========="
  
      - name: Upload Dr. Memory reports
        uses: actions/upload-artifact@v4
        with:
          name: drmemory-report-${{ github.event.repository.name }}-on-${{ matrix.os }}
          path: './logs/*'
